"use strict";const toolBar=document.getElementById("toolbar");class DrawingCanvas{constructor(t,e){this.changeHandler=t=>{const e=this.context,s=t.target;"color"===s.id&&(e.strokeStyle=s.value),"lineWidth"===s.id&&(e.lineWidth=Number(s.value))},this.clearCanvas=t=>{const e=this.context,s=t.target;"clear"===s.id&&e.clearRect(0,0,this.canvas.width,this.canvas.height),"eraser"===s.id&&(this.shouldErase=!0)},this.start=t=>{const e=t.touches?t.touches[0]:t;this.shouldErase?(this.context.globalCompositeOperation="destination-out",this.isErasing=!0,this.isDrawing=!1):(this.context.globalCompositeOperation="source-over",this.isDrawing=!0,this.isErasing=!1);e.clientX,this.canvas.offsetLeft,e.clientY,this.canvas.offsetTop},this.stop=()=>{this.isDrawing=!1,this.isErasing=!1,this.context.stroke(),this.context.beginPath()},this.draw=t=>{if(!this.isDrawing&&!this.isErasing)return;const e=t.touches?t.touches[0]:t;this.context.lineWidth=this.lineWidth,this.context.lineCap="round",this.context.lineTo(e.clientX-this.canvas.offsetLeft,e.clientY-this.canvas.offsetTop),this.context.stroke()};const s=document.getElementById(t),i=s.getContext("2d");if(null==e?void 0:e.controllerId){const t=document.getElementById(e.controllerId);this.controller=t}(null==e?void 0:e.width)?s.width=e.width:s.width=window.innerWidth-s.offsetLeft,(null==e?void 0:e.height)?s.height=e.height:s.height=window.innerHeight-s.offsetTop,this.canvas=s,this.context=i,this.context.lineWidth=5,this.context.strokeStyle="black",this.listen()}listen(){const t=this.canvas,e=this.controller;t.addEventListener("mousedown",this.start),t.addEventListener("mouseup",this.stop),t.addEventListener("mousemove",this.draw),t.addEventListener("touchstart",this.start),t.addEventListener("touchend",this.stop),t.addEventListener("touchmove",this.draw),e.addEventListener("change",this.changeHandler),e.addEventListener("click",this.clearCanvas)}log(){return console.log(this.canvas)}}new DrawingCanvas("drawing-board",{controllerId:"toolbar"});
//# sourceMappingURL=index.5edf545b.js.map
