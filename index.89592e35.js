"use strict";const toolBar=document.getElementById("toolbar");class DrawingCanvas{constructor(t,e){this.changeHandler=t=>{const e=this.context,i=t.target;"stroke"===i.id&&(e.strokeStyle=i.value),"lineWidth"===i.id&&(e.lineWidth=Number(i.value))},this.clearCanvas=t=>{const e=this.context;"clear"===t.target.id&&e.clearRect(0,0,this.canvas.width,this.canvas.height)},this.setDrawpoint=t=>{const e=t.touches?t.touches[0]:t;this.isDrawing=!0;e.clientX,this.canvas.offsetLeft,e.clientY,this.canvas.offsetTop},this.stopDrawing=()=>{this.isDrawing=!1,this.context.stroke(),this.context.beginPath()},this.draw=t=>{if(!this.isDrawing)return;const e=t.touches?t.touches[0]:t;this.context.lineWidth=this.lineWidth,this.context.lineCap="round",this.context.lineTo(e.clientX-this.canvas.offsetLeft,e.clientY-this.canvas.offsetTop),this.context.stroke()};const i=document.getElementById(t),n=i.getContext("2d");if(null==e?void 0:e.controllerId){const t=document.getElementById(e.controllerId);this.controller=t}(null==e?void 0:e.width)?i.width=e.width:i.width=window.innerWidth-i.offsetLeft,(null==e?void 0:e.height)?i.height=e.height:i.height=window.innerHeight-i.offsetTop,this.canvas=i,this.context=n,this.context.lineWidth=5,this.context.strokeStyle="black",this.listen()}listen(){const t=this.canvas,e=this.controller;t.addEventListener("mousedown",this.setDrawpoint),t.addEventListener("mouseup",this.stopDrawing),t.addEventListener("mousemove",this.draw),t.addEventListener("touchstart",this.setDrawpoint),t.addEventListener("touchend",this.stopDrawing),t.addEventListener("touchmove",this.draw),e.addEventListener("change",this.changeHandler),e.addEventListener("click",this.clearCanvas)}log(){return console.log(this.canvas)}}new DrawingCanvas("drawing-board",{controllerId:"toolbar"});
//# sourceMappingURL=index.89592e35.js.map
